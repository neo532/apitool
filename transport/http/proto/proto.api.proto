syntax = "proto3";

package proto;

import "google/api/annotations.proto";
import "google/api/domain.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/neo532/apitool/transport/http/proto";

service Proto {

    option (google.api.domain) = {
		dev: "http://127.0.0.1:8500/demo"
        test: "http://127.0.0.1:8500/demo"
        gray: "http://127.0.0.1:8500/demo"
        prod: "http://127.0.0.1:8500/demo"
    };

	rpc Post (PostRequest) returns (google.protobuf.Empty){
		option (google.api.http)={
            post: "/resource" 
            body: "*"
			needClient: "true"
        };
	};

	rpc Put (PutRequest) returns (google.protobuf.Empty){
		option (google.api.http)={
            put: "/resource" 
            body: "*"
			needClient: "true"
        };
	};

	rpc Get (GetRequest) returns (GetReply){
		option (google.api.http)={
            get: "/resource" 
			needClient: "true"
        };
	};

	rpc GetById (GetByIdRequest) returns (GetByIdReply){
		option (google.api.http)={
            get: "/v1/resource" 
            timeLimit: "5"
        };
	};
}

// Post
message PostRequest {
    int32 type = 1;
    string name = 2;
    string summary = 3;
}

// Put
message PutRequest {
    int64 id = 2;
}

// Get
message GetRequest {
}
message GetReply {
}

// GetById
message GetByIdRequest {
    uint64 id = 1;
}
message GetByIdReply {
	string url = 1;
    int32 status = 2;
}
